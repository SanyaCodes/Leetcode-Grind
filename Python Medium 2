## Greatest Common Divisor of Strings

# Question:

For two strings s and t, we say "t divides s" if and only if s = t + t + t + ... + t + t (i.e., t is concatenated with itself one or more times).
Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

Example 1:

Input: str1 = "ABABAB", str2 = "ABAB"
Output: "AB"

Example 2:

Input: str1 = "LEET", str2 = "CODE"
Output: ""

# Answer:

class Solution:
    def gcdOfStrings(self, str1: str, str2: str) -> str:
        ans1 = ""
        ans2 = ""
        len1 = len(str1)
        len2 = len(str2)
        maxlen = max(len1, len2) # (9, 6)
        i = maxlen # 9
        
        if len1 == 1 or len2 == 1:
            gcd = 1
        else:
            while i < maxlen+1:
                if len1 % i == 0 and len2 % i == 0:
                    gcd = i
                    break
                i -= 1
        
        if len1 > len2: 
            part = str2[:gcd]
        if len2 >= len1:
            part = str1[:gcd]
        
        for i in range(1, len(str1)//gcd+1):
            ans1 += part
        for i in range(1, len(str2)//gcd+1):
            ans2 += part

        if ans1 == str1 and ans2 == str2:
            return part
        else:
            return ""
